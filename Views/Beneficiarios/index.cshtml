@model IEnumerable<Beneficiario>

@{
    ViewData["Title"] = "Gestión de Beneficiarios";
}

<div class="container-fluid px-4">
    <!-- Header con estadísticas -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">
                <i class="fas fa-users me-2 text-primary"></i>@ViewData["Title"]
            </h1>
            <p class="mb-0 text-muted">Administre y gestione los beneficiarios del sistema</p>
        </div>
        <a asp-action="Create" class="btn btn-primary btn-icon-split shadow-sm">
            <span class="icon text-white-50">
                <i class="fas fa-user-plus"></i>
            </span>
            <span class="text">Nuevo Beneficiario</span>
        </a>
    </div>

    <!-- Tarjetas de estadísticas -->
    <div class="row mb-4">
        <div class="col-xl-3 col-md-6">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Total Beneficiarios
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.Count()</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-users fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Activos
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Count(b => b.EstadoSubsidio?.ToLower() == "activo")
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check-circle fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Pendientes
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Count(b => b.EstadoSubsidio?.ToLower() == "pendiente")
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-clock fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-xl-3 col-md-6">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Con Entidad
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.Count(b => b.EntidadId != null)
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-building fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Mensajes de éxito -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show shadow-sm" role="alert">
            <div class="d-flex align-items-center">
                <i class="fas fa-check-circle fa-lg me-3"></i>
                <div class="flex-grow-1">
                    <h6 class="alert-heading mb-1">¡Operación Exitosa!</h6>
                    <p class="mb-0">@TempData["SuccessMessage"]</p>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        </div>
    }

    <!-- Card principal de la tabla -->
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">
                <i class="fas fa-list me-2"></i>Lista de Beneficiarios Registrados
            </h6>
            <div class="d-flex">
                <div class="input-group input-group-sm me-2" style="width: 250px;">
                    <input type="text" class="form-control" placeholder="Buscar beneficiario..." id="searchInput">
                    <button class="btn btn-outline-secondary" type="button">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
                <button class="btn btn-sm btn-outline-secondary" id="exportBtn">
                    <i class="fas fa-download me-1"></i>Exportar
                </button>
            </div>
        </div>
        <div class="card-body">
            @if (Model.Any())
            {
                <div class="table-responsive">
                    <table class="table table-bordered table-hover" id="dataTable" width="100%" cellspacing="0">
                        <thead class="bg-gradient-primary text-white">
                            <tr>
                                <th class="text-center" style="width: 80px;">
                                    <i class="fas fa-hashtag"></i>
                                </th>
                                <th>Información Personal</th>
                                <th>Contacto</th>
                                <th>Entidad</th>
                                <th class="text-center">Estado</th>
                                <th class="text-center" style="width: 120px;">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td class="text-center fw-bold text-primary">
                                        #@item.Id_Beneficiario
                                    </td>
                                    <td>
                                        <div class="d-flex align-items-center">
                                            <div class="avatar-sm me-3">
                                                <div class="avatar-initials bg-primary text-white rounded-circle d-flex align-items-center justify-content-center" 
                                                     style="width: 40px; height: 40px; font-weight: 600;">
                                                    @GetInitials(item.Nombre)
                                                </div>
                                            </div>
                                            <div>
                                                <h6 class="mb-1">@item.Nombre</h6>
                                                <small class="text-muted">
                                                    <i class="fas fa-id-card me-1"></i>@item.Dui
                                                </small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        <div>
                                            <div class="mb-1">
                                                <i class="fas fa-phone me-2 text-muted"></i>
                                                <span class="fw-medium">@item.Telefono</span>
                                            </div>
                                            <div class="text-truncate" style="max-width: 200px;" 
                                                 data-bs-toggle="tooltip" title="@item.Direccion">
                                                <i class="fas fa-map-marker-alt me-2 text-muted"></i>
                                                @item.Direccion
                                            </div>
                                        </div>
                                    </td>
                                    <td>
                                        @if (item.Entidad != null)
                                        {
                                            <span class="badge bg-light text-dark border">
                                                <i class="fas fa-building me-1"></i>@item.Entidad.Nombre
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-light text-muted border">
                                                <i class="fas fa-times me-1"></i>No asignada
                                            </span>
                                        }
                                    </td>
                                    <td class="text-center">
                                        @{
                                            var estadoClass = GetEstadoBadgeClass(item.EstadoSubsidio);
                                        }
                                        <span class="badge @estadoClass">
                                            <i class="@GetEstadoIcon(item.EstadoSubsidio) me-1"></i>
                                            @item.EstadoSubsidio
                                        </span>
                                    </td>
                                    <td class="text-center">
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@item.Id_Beneficiario" 
                                               class="btn btn-sm btn-outline-info" 
                                               data-bs-toggle="tooltip" title="Ver detalles">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            <a asp-action="Edit" asp-route-id="@item.Id_Beneficiario" 
                                               class="btn btn-sm btn-outline-warning" 
                                               data-bs-toggle="tooltip" title="Editar">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <button type="button" class="btn btn-sm btn-outline-danger" 
                                                    data-bs-toggle="tooltip" title="Eliminar"
                                                    onclick="confirmDelete(@item.Id_Beneficiario, '@item.Nombre')">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>

                <!-- Paginación -->
                <div class="d-flex justify-content-between align-items-center mt-3">
                    <div class="text-muted">
                        Mostrando <strong>@Model.Count()</strong> registros
                    </div>
                    <nav>
                        <ul class="pagination pagination-sm mb-0">
                            <li class="page-item disabled">
                                <a class="page-link" href="#">Anterior</a>
                            </li>
                            <li class="page-item active">
                                <a class="page-link" href="#">1</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="#">2</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="#">3</a>
                            </li>
                            <li class="page-item">
                                <a class="page-link" href="#">Siguiente</a>
                            </li>
                        </ul>
                    </nav>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <div class="empty-state">
                        <i class="fas fa-users fa-4x text-muted mb-3"></i>
                        <h4 class="text-muted">No hay beneficiarios registrados</h4>
                        <p class="text-muted mb-4">Comience agregando el primer beneficiario al sistema.</p>
                        <a asp-action="Create" class="btn btn-primary btn-lg">
                            <i class="fas fa-user-plus me-2"></i>Registrar Primer Beneficiario
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Modal de confirmación para eliminar -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirmar Eliminación
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>¿Está seguro que desea eliminar al beneficiario <strong id="beneficiarioName"></strong>?</p>
                <p class="text-danger small mb-0">
                    <i class="fas fa-info-circle me-1"></i>
                    Esta acción no se puede deshacer.
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Eliminar</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Inicializar tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl)
        })

        // Búsqueda en tiempo real
        document.getElementById('searchInput').addEventListener('input', function() {
            const searchText = this.value.toLowerCase();
            const rows = document.querySelectorAll('#dataTable tbody tr');
            
            rows.forEach(row => {
                const text = row.textContent.toLowerCase();
                row.style.display = text.includes(searchText) ? '' : 'none';
            });
        });

        // Confirmación de eliminación
        let deleteId = null;
        
        function confirmDelete(id, name) {
            deleteId = id;
            document.getElementById('beneficiarioName').textContent = name;
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
            if (deleteId) {
                // Aquí iría la llamada AJAX para eliminar
                console.log('Eliminando beneficiario ID:', deleteId);
                // Redirigir o recargar la página después de eliminar
                window.location.href = '@Url.Action("Delete", new { id = "__id__" })'.replace('__id__', deleteId);
            }
        });

        // Exportar datos
        document.getElementById('exportBtn').addEventListener('click', function() {
            // Simular exportación
            alert('Funcionalidad de exportación en desarrollo...');
        });
    </script>
}

@functions {
    // Función para obtener las iniciales del nombre
    public string GetInitials(string nombre)
    {
        if (string.IsNullOrEmpty(nombre)) return "??";
        
        var partes = nombre.Split(' ', StringSplitOptions.RemoveEmptyEntries);
        if (partes.Length >= 2)
        {
            return $"{partes[0][0]}{partes[1][0]}".ToUpper();
        }
        return nombre.Length >= 2 ? nombre.Substring(0, 2).ToUpper() : nombre.ToUpper();
    }

    // Función para determinar la clase CSS del badge de estado
    public string GetEstadoBadgeClass(string estado)
    {
        if (string.IsNullOrEmpty(estado)) return "bg-secondary";
        
        return estado.ToLower() switch
        {
            "activo" => "bg-success",
            "pendiente" => "bg-warning",
            "inactivo" => "bg-secondary",
            "rechazado" => "bg-danger",
            "aprobado" => "bg-info",
            _ => "bg-secondary"
        };
    }

    // Función para determinar el icono del estado
    public string GetEstadoIcon(string estado)
    {
        if (string.IsNullOrEmpty(estado)) return "fas fa-question";
        
        return estado.ToLower() switch
        {
            "activo" => "fas fa-check-circle",
            "pendiente" => "fas fa-clock",
            "inactivo" => "fas fa-pause-circle",
            "rechazado" => "fas fa-times-circle",
            "aprobado" => "fas fa-thumbs-up",
            _ => "fas fa-question"
        };
    }
}

@section Styles {
    <style>
        .avatar-initials {
            font-size: 14px;
            font-weight: 600;
        }
        
        .card {
            border: none;
            border-radius: 10px;
        }
        
        .card-header {
            border-radius: 10px 10px 0 0 !important;
            border-bottom: 1px solid #e3e6f0;
        }
        
        .table th {
            border-bottom: 2px solid #e3e6f0;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.8rem;
            letter-spacing: 0.5px;
        }
        
        .bg-gradient-primary {
            background: linear-gradient(45deg, #4e73df, #224abe) !important;
        }
        
        .border-left-primary {
            border-left: 4px solid #4e73df !important;
        }
        
        .border-left-success {
            border-left: 4px solid #1cc88a !important;
        }
        
        .border-left-warning {
            border-left: 4px solid #f6c23e !important;
        }
        
        .border-left-info {
            border-left: 4px solid #36b9cc !important;
        }
        
        .btn-icon-split {
            padding: 0.375rem 1rem;
        }
        
        .empty-state {
            padding: 3rem 1rem;
        }
        
        .table-hover tbody tr:hover {
            background-color: #f8f9fc;
            transform: translateY(-1px);
            transition: all 0.2s ease;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        .badge {
            font-size: 0.75em;
            padding: 0.35em 0.65em;
        }
        
        .shadow-sm {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075) !important;
        }
        
        .text-truncate {
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
    </style>
}